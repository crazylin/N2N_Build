name: Build n2n on Windows

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-2022
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.0'
        msbuild-architecture: x64  # 修正架构设置

    - name: Install OpenSSL
      run: |
        # 使用官方推荐的安装方式
        $url = "https://slproweb.com/download/Win64OpenSSL-3_1_4.msi"
        Invoke-WebRequest -Uri $url -OutFile openssl.msi
        Start-Process msiexec.exe -Wait -ArgumentList "/i openssl.msi /quiet /qn /norestart ADDLOCAL=ALL"
        $env:Path += ";C:\Program Files\OpenSSL-Win64\bin"
        echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64" >> $env:GITHUB_ENV
      timeout-minutes: 5

    - name: Configure CMake
      shell: cmd
      run: |
        cmake -B build -S . ^
          -G "Visual Studio 17 2022" -A x64 ^
          -DOPENSSL_ROOT_DIR="%OPENSSL_ROOT_DIR%" ^
          -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL ^
          -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=BOTH

    - name: Build project
      run: cmake --build build --config Release --parallel 4

    - name: Verify binaries
      run: |
        if (-not (Test-Path "build\Release\edge.exe")) { exit 1 }
        if (-not (Test-Path "build\Release\supernode.exe")) { exit 1 }

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Binaries
        path: |
          build/Release/edge.exe
          build/Release/supernode.exe
        retention-days: 3
        compression-level: 9